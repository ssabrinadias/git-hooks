

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' 


lint=$(npm run lint -s)

if [[ $lint == *"problem"* ]]; then
	echo " ${RED}Aborting push by LINT >>>>>> ${NC}"
	exit 1
fi
echo "${GREEN} Validated by Lint ${NC}"


 exitcode=$?
      npm run lint
      if [ "$exitcode" != "0" ]; then exit 1; fi

SCOPE=dev

cmd="./node_modules/.bin/jest --config jest.config.js  --coverageReporters='text-summary'"
$cmd
status=$?

if [[ $status != 0 ]]; then
	echo " ${RED}Aborting push by TEST >>>>>> ${NC}"
	exit 1
fi
echo "${GREEN} Validated by TEST ${NC}"


exec </dev/tty

	read -n 1 -p ">>>>> VERIFY ??? [y/n] " yesno

	case $yesno in
	[yY])
		lint=$(git branch --show-current)
		diff=$(git diff  develop..${lint} --pretty='' --name-only)


		for j in $diff
		do
			var=$( cat coverage/coverage-summary.json | grep $j )

			IFS=' '  
			read -ra L <<< "$var" 
			
			if [ ! -z "$L" ]
			then
				echo ---
				echo "verificando >>> ${L} ... "
			fi

			IFS=','  
			read -ra ADDR <<< "$var" 
				for i in "${ADDR[@]}"; do 
				if [[ $i == *"pct"* ]]; then
					read r <<< $(echo $i | awk '{gsub(/[^0-9_ \t]/,"")}1')
					
					if [ "$r" -lt 96 ]; then
						echo " ${RED}Aborting push by COVERAGE >>>>>> ${NC}"
						exit 1
					else 
						echo "${GREEN} OK ${NC}"
					fi
				fi
			done
		done
		
     	exec </dev/tty

		read -n 1 -p ">>>>> CHANGELOG? [y/n] " yesno

		case $yesno in
			[yY])
				echo " " >> CHANGELOG.md
				git add CHANGELOG.md
				git commit -m 'CHANGELOG'

				
				echo "${GREEN}"
				echo "*****"
				echo "finished with CHANGELOG !!!"
				echo "*****${NC}"
				exit 0
				;;

			[nN])
				echo "${GREEN}"
				echo "*****"
				echo "finished!!!"
				echo "*****${NC}"
				exit 0
				;;
			esac

		exec <&-
		;;

	[nN])
     	echo "${GREEN}"
        echo "*****"
		echo "finished!!!"
        echo "*****${NC}"
		exit 0
		;;
	esac

exec <&-